#!/usr/bin/python
#
import os,sys
from optparse import OptionParser
#
opts = OptionParser()
usage = "run peakfilter\nusage:%prog -p p-value -r numbers of reads -f foldchange -i input bam.peak -o output filtered bam.peak"
opts = OptionParser(usage=usage)
opts.add_option("-p", help="threshold of p-value for experiments ")
opts.add_option("-r", help="threshold of numbers of experimental normalized reads ")
opts.add_option("-f", help="threshold of foldchange value which experiments was divided by control ")
opts.add_option("-i", help="input peak.txt generated by last step ")
opts.add_option("-o", help="output peak file filtered ")
options, arguments = opts.parse_args()
#
p_value=options.p
threshold_reads=options.r
foldchange=options.f
input_peak=options.i
output_peak=options.o
#
def isNum(value):
    try:
        float(value)
    except ValueError:
        return False
    else:
        return True
def valid_line(line):
        line=line.rstrip().split("\t")
        type_list=[isNum(i) for i in line[1:-1]]
        if False in type_list:
                return False
        if len(line) < 6:
                return False
        if float(p_value) < float(line[3]):
                return False
        if float(threshold_reads) > float(line[4]):
                return False
        try:
                if float(foldchange) > float(line[5]):
                        return False
        except:
                return True
#
peak_data=open(input_peak)
out=open(output_peak, 'w')
for iline,line in enumerate(peak_data):
        if valid_line(line)==False:
                continue
	else:
		line=line.strip()
		print >> out, line



